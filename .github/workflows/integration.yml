name: 'integration'
# This workflow intends to verify that the module provisions
# successfully for all software and infrastructure defined.
# https://learn.hashicorp.com/tutorials/terraform/automate-terraform

on:
  push:
    paths-ignore:
      - 'LICENSE'
      - '**.md'

jobs:
  integrate:
    name: Integration Tests
    runs-on: ${{ matrix.os }}
    env:
      TF_IN_AUTOMATION: 1
      TF_VERSION: ${{ matrix.tf }}
      TF_VAR_control_plane_node_count: 0
      TF_VAR_cluster_name: tfacc-${{ github.sha }}
      TF_VAR_count_x86: 1
      TF_VAR_count_arm: 1
      # TODO only provide this to terraform steps that need it
      TF_VAR_auth_token: ${{ secrets.METAL_AUTH_TOKEN }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        tf: [0.13.2]
    steps:
    - name: Checkout from Github
      uses: actions/checkout@v2
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}
    - name: Initialize Terraform, Modules, and Plugins
      id: init
      run: terraform init -input=false
    - id: metal-project
      uses: displague/metal-project-action@v0.5.0
      env:
        METAL_AUTH_TOKEN: ${{ secrets.METAL_AUTH_TOKEN }}
    - name: Terraform Plan
      id: plan
      timeout-minutes: 45
      env:
        TF_VAR_project_id: ${{ steps.metal-project.outputs.projectID }}
      run: terraform plan -out=tfplan -input=false
    - name: Terraform Apply
      id: apply
      timeout-minutes: 45
      run: terraform apply -input=false tfplan
    - name: Terraform Destroy
      id: destroy
      if: ${{ always() }}
      run: terraform destroy -input=false -auto-approve
    - name: HA Terraform Plan
      id: ha-plan
      timeout-minutes: 45
      env:
        TF_VAR_project_id: ${{ steps.metal-project.outputs.projectID }}
        TF_VAR_control_plane_node_count: 1
      run: terraform plan -out=tfplan -input=false
    - name: HA Terraform Apply
      id: ha-apply
      timeout-minutes: 45
      run: terraform apply -input=false tfplan
    - name: HA Terraform Destroy
      id: ha-destroy
      if: ${{ always() }}
      run: terraform destroy -input=false -auto-approve
    - name: Project Delete
      if: ${{ always() }}
      uses: displague/metal-sweeper-action@v0.3.0
      env:
        METAL_PROJECT_ID: ${{ steps.metal-project.outputs.projectID }}
        METAL_AUTH_TOKEN: ${{ secrets.METAL_AUTH_TOKEN }}
