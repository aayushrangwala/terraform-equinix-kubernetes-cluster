## template: jinja
#cloud-config
apt:
  sources: 
    docker.list:
      source: deb [arch=amd64] https://download.docker.com/linux/ubuntu $RELEASE stable
      keyid: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    kubernetes.list:
      source: deb [arch=amd64] https://apt.kubernetes.io/ kubernetes-xenial main
      keyid: 7F92E05B31093BEF5A3C2D38FEEA9169307EA071
    kubernetes-key-2:
      keyid: 59FE0256827269DC81578F928B57C5C2836F4BEB 

package_upgrade: false
package_reboot_if_required: false

packages:
- apt-transport-https
- ca-certificates
- curl
- gnupg
- lsb-release
- linux-generic
- jq

write_files:
- content: |
    overlay
    br_netfilter
  path: /etc/modules-load.d/k8s.conf
- content: |
    net.bridge.bridge-nf-call-iptables  = 1
    net.ipv4.ip_forward                 = 1
    net.bridge.bridge-nf-call-ip6tables = 1
  path: /etc/sysctl.d/99-kubernetes-cri.conf
- content: |
    KUBELET_EXTRA_ARGS=--node-ip={{ ds.meta_data.local_ipv4 }}
  path: /etc/default/kubelet
- content: |
    apiVersion: kubeadm.k8s.io/v1beta3
    kind: JoinConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        cloud-provider: "external"
      taints: null
    discovery:
      bootstrapToken:
        token: "8in490.ru91gdlo4hy0xhfz"
        apiServerEndpoint: ${VIP}:6443
        unsafeSkipCAVerification: true
  path: /root/kubeadm.join.yaml

runcmd:
- |
  sed -ri '/\sswap\s/s/^#?/#/' /etc/fstab
  swapoff -a
  mount -a
  modprobe overlay
  modprobe br_netfilter
  sysctl --system
  export DEBIAN_FRONTEND=noninteractive
  TRIMMED_KUBERNETES_VERSION=$(echo ${KUBERNETES_VERSION} | sed 's/\./\\\\./g' | sed 's/^v//')
  RESOLVED_KUBERNETES_VERSION=$(apt-cache madison kubelet | awk -v VERSION=$${TRIMMED_KUBERNETES_VERSION} '$3~ VERSION { print $3 }' | head -n1)
  apt-get install -y containerd.io kubelet=$${RESOLVED_KUBERNETES_VERSION} kubeadm=$${RESOLVED_KUBERNETES_VERSION} kubectl=$${RESOLVED_KUBERNETES_VERSION}
  apt-mark hold kubelet kubeadm kubectl
  containerd config default > /etc/containerd/config.toml
  sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
  sed -i "s,sandbox_image.*$,sandbox_image = \"$(kubeadm config images list | grep pause | sort -r | head -n1)\"," /etc/containerd/config.toml
  systemctl restart containerd
  systemctl enable kubelet.service
  kubeadm join --config=/root/kubeadm.join.yaml

power_state: 
  mode: false
